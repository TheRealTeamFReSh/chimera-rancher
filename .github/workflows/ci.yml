name: CI pipeline

on:
    push:
        branches: [master, ci]
    pull_request:
        branches: [master]

env:
    CARGO_TERM_COLOR: always

jobs:
    build:
        strategy:
            matrix:
                toolchain: [nightly] # removed stable
                os: [macos-latest, ubuntu-latest, windows-latest]
        runs-on: ${{ matrix.os }}
        needs: clean
        steps:
            - uses: actions/checkout@v3

            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.cargo/bin/
                      ~/.cargo/registry/index/
                      ~/.cargo/registry/cache/
                      ~/.cargo/git/db/
                      target/
                  key: ${{ runner.os }}-cargo-build-${{ matrix.toolchain }}-${{ hashFiles('**/Cargo.toml') }}

            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.toolchain }}
                  override: true

            - name: Install alsa
              run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev
              if: ${{ runner.os == 'Linux' }}

            - name: Install udev
              run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev
              if: ${{ runner.os == 'Linux' }}

            - name: Check
              run: cargo check
              env:
                  CARGO_INCREMENTAL: 0
                  RUSTFLAGS: "-C debuginfo=0 -D warnings"

    clean:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions-rs/toolchain@v1
              with:
                  toolchain: nightly
                  components: rustfmt, clippy
                  override: true

            - name: Install alsa
              run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev

            - name: Install udev
              run: sudo apt-get update; sudo apt-get install --no-install-recommends libudev-dev

            #- name: Check the format
            #  run: cargo +nightly-2021-03-24 fmt --all -- --check

            # type complexity must be ignored because we use huge templates for queries
            # -A clippy::manual-strip: strip_prefix support was added in 1.45. we want to support earlier rust versions
            #- name: Run clippy
            #  run: cargo clippy --all-targets --all-features -- -D warnings
